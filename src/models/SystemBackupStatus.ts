/* tslint:disable */
/* eslint-disable */
/**
 * Mail-in-a-Box
 * Mail-in-a-Box API HTTP specification.  # Introduction This API is documented in [**OpenAPI format**](http://spec.openapis.org/oas/v3.0.3). ([View the full HTTP specification](https://raw.githubusercontent.com/mail-in-a-box/mailinabox/api-spec/api/mailinabox.yml).)  All endpoints are relative to `https://{host}/admin` and are secured with [`Basic Access` authentication](https://en.wikipedia.org/wiki/Basic_access_authentication). If you have multi-factor authentication enabled, authentication with a `user:password` combination will fail unless a valid OTP is supplied via the `x-auth-token` header. Authentication via a `user:user_key` pair is possible without the header being present.
 *
 * The version of the OpenAPI document: 0.51.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Backup status details.
 * @export
 * @interface SystemBackupStatus
 */
export interface SystemBackupStatus {
  /**
   *
   * @type {Date}
   * @memberof SystemBackupStatus
   */
  date: Date;
  /**
   *
   * @type {string}
   * @memberof SystemBackupStatus
   */
  dateDelta: string;
  /**
   *
   * @type {string}
   * @memberof SystemBackupStatus
   */
  dateStr: string;
  /**
   *
   * @type {string}
   * @memberof SystemBackupStatus
   */
  deletedIn?: string;
  /**
   *
   * @type {boolean}
   * @memberof SystemBackupStatus
   */
  full: boolean;
  /**
   *
   * @type {number}
   * @memberof SystemBackupStatus
   */
  size: number;
  /**
   *
   * @type {number}
   * @memberof SystemBackupStatus
   */
  volumes: number;
}

export function SystemBackupStatusFromJSON(json: any): SystemBackupStatus {
  return SystemBackupStatusFromJSONTyped(json, false);
}

export function SystemBackupStatusFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): SystemBackupStatus {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    date: new Date(json['date']),
    dateDelta: json['date_delta'],
    dateStr: json['date_str'],
    deletedIn: !exists(json, 'deleted_in') ? undefined : json['deleted_in'],
    full: json['full'],
    size: json['size'],
    volumes: json['volumes'],
  };
}

export function SystemBackupStatusToJSON(
  value?: SystemBackupStatus | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    date: value.date.toISOString(),
    date_delta: value.dateDelta,
    date_str: value.dateStr,
    deleted_in: value.deletedIn,
    full: value.full,
    size: value.size,
    volumes: value.volumes,
  };
}
